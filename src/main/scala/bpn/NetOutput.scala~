package bpn
import mathext._
trait NetOutput {
  var targets: Matrix

  def backward()

  var forwardCallback: Option[(Any) => Unit] = None
  var learnCallback: Option[(Any) => Unit] = None

  def forward() = {
    if (bpn.verbosity >= 100) println(this + " forward end")
    if (forwardCallback.isDefined) forwardCallback.get(this)
  }

  def learn() = {
    if (bpn.verbosity >= 100) println(this + " learn end")
    if (learnCallback.isDefined) learnCallback.get(this)
  }
}
